{
  "info": {
    "name": "PAD User Management Service",
    "description": "API for user authentication, profiles and friends management",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "friendId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "üîê Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"player@example.com\",\n  \"username\": \"PlayerOne\",\n  \"password\": \"SecurePassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/register",
              "host": ["{{baseUrl}}"],
              "path": ["users", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set(\"accessToken\", response.accessToken);",
                  "    pm.collectionVariables.set(\"refreshToken\", response.refreshToken);",
                  "    pm.collectionVariables.set(\"userId\", response.user.id);",
                  "    ",
                  "    pm.test(\"Registration successful\", function() {",
                  "        pm.expect(response.user).to.have.property('id');",
                  "        pm.expect(response.user.email).to.eql('player@example.com');",
                  "        pm.expect(response.user.currency).to.eql(100);",
                  "        pm.expect(response).to.have.property('accessToken');",
                  "        pm.expect(response).to.have.property('refreshToken');",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"player@example.com\",\n  \"password\": \"SecurePassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/login",
              "host": ["{{baseUrl}}"],
              "path": ["users", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set(\"accessToken\", response.accessToken);",
                  "    pm.collectionVariables.set(\"refreshToken\", response.refreshToken);",
                  "    pm.collectionVariables.set(\"userId\", response.user.id);",
                  "    ",
                  "    pm.test(\"Login successful\", function() {",
                  "        pm.expect(response.user).to.have.property('id');",
                  "        pm.expect(response).to.have.property('accessToken');",
                  "        pm.expect(response).to.have.property('refreshToken');",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["users", "refresh"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set(\"accessToken\", response.accessToken);",
                  "    ",
                  "    pm.test(\"Token refreshed\", function() {",
                  "        pm.expect(response).to.have.property('accessToken');",
                  "    });",
                  "}"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "üë§ User Management",
      "item": [
        {
          "name": "Get User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"NewPlayerName\",\n  \"level\": 5\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}"]
            }
          }
        },
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users",
              "host": ["{{baseUrl}}"],
              "path": ["users"]
            }
          }
        }
      ]
    },
    {
      "name": "üë• Friends Management",
      "item": [
        {
          "name": "Get Friends List",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/friends",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "friends"]
            }
          }
        },
        {
          "name": "Send Friend Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"friendId\": \"{{friendId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/friends",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "friends"]
            }
          }
        },
        {
          "name": "Remove Friend",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/{{userId}}/friends/{{friendId}}",
              "host": ["{{baseUrl}}"],
              "path": ["users", "{{userId}}", "friends", "{{friendId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "ü©∫ Health Check",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          }
        }
      ]
    }
  ]
}